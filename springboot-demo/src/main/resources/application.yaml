spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: master0, master0slave0, master0slave1, master1, master1slave0, master1slave1
      master0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.99.101:3306/orders_0?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      master0slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.99.101:3308/orders_0?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      master0slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.99.101:3309/orders_0?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      master1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.99.101:3307/orders_1?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      master1slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.99.101:3308/orders_1?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      master1slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.99.101:3309/orders_1?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
    sharding:
      tables:
        orders:
          actual-data-nodes: ds0.orders_$->{[0,2,4,6]}, ds1.orders_$->{[1,3,5,7]}
          table-strategy:
            inline:
              algorithm-expression: orders_$->{user_id % 8}
              sharding-column: user_id
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: orders_$->{user_id % 2}
      masterslaverules:
        ds0:
          master-data-source-name: master0
          slave-data-source-names: master0slave0, master0slave1
        ds1:
          master-data-source-name: master1
          slave-data-source-names: master1slave0, master1slave1

# mybatis 配置内容
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      id-type: none
      logic-not-delete-value: 0
      logic-delete-value: 1
  mapper-locations: classpath*:mapper/*.xml # 配置 Mapper XML 地址
  type-aliases-package: fun.happyhacker.springbootdemo.mybatis.dataobject

logging:
  level:
    root: debug