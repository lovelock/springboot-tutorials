server:
  port: 8080
spring:
  shardingsphere:
    datasource:
      names: master0, master1, slave0, slave1
      master0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.99.101:3306/orders_0?charset=utf8mb4&allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: root
      master1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.99.101:3307/orders_1?charset=utf8mb4&allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: root
      slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.99.101:3308/orders_0?charset=utf8mb4&allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: root
      slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.99.101:3309/orders_1?charset=utf8mb4&allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: root
    sharding:
      tables:
        t_orders:
          key-generator:
            column: id
            type: SNOWFLAKE
          actual-data-nodes: ds0.t_orders_$->{[0,2,4,6]}, ds1.t_orders_$->{[1,3,5,7]}
          table-strategy:
            inline:
              algorithm-expression: t_orders_$->{user_id % 8}
              sharding-column: user_id
          database-strategy:
            inline:
              algorithm-expression: ds$->{user_id % 2}
              sharding-column: user_id
        t_order_config:
          actual-data-nodes: ds0.t_order_config

      master-slave-rules:
        ds0:
          master-data-source-name: master0
          slave-data-source-names: slave0
        ds1:
          master-data-source-name: master1
          slave-data-source-names: slave1

      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: master$->{user_id % 2}

    props:
      log:
        show: true
      sql:
        show: true


mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      id-type: none
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: fun.happyhacker.springbootdemo.mybatis.orders